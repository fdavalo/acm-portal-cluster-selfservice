apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: clientpolicy
spec:
  crd:
    spec:
      names:
        kind: ClientPolicy
  targets:
    - rego: |
        package clientpolicy

        #block pod creation when namespace prefix corresponding to a client prefix in a group
        violation[{"msg": msg}] {
            input.review.kind.kind == "Pod"
            input.review.operation == "CREATE"
            startswith(input.review.namespace, "team")
            some group
            prefix := concat("-", [data.inventory.cluster["user.openshift.io/v1"].Group[group]["metadata"]["labels"]["client-prefix"], ""])
            startswith(input.review.namespace, prefix)
            reason := "you are not allowed to start pods on this cluster"
            msg:= sprintf("Deny Operation %v for %v %v because %v.",[input.review.operation,input.review.kind.kind,input.review.object.metadata.name, reason])
        }

        #block creation of a namespace when name does not starts with a client prefix
        #when user requesting the namespace is part of a group with such prefix label
        violation[{"msg": msg}] {
            input.review.kind.kind == "Namespace"
            input.review.operation == "CREATE"
            startswith(input.review.name, "team")
            user := input.review.object.metadata.annotations["openshift.io/requester"]
            some group
            user == data.inventory.cluster["user.openshift.io/v1"].Group[group]["users"][_]
            prefix := concat("-", [data.inventory.cluster["user.openshift.io/v1"].Group[group]["metadata"]["labels"]["client-prefix"], ""])
            not startswith(input.review.name, prefix)
            reason := "you can only create namespaces with name starting with "
            msg:= sprintf("Deny Operation %v for %v %v because %v %v.",[input.review.operation,input.review.kind.kind,input.review.object.metadata.name, reason, prefix])
        }  
      target: admission.k8s.gatekeeper.sh

